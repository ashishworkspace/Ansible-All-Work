- hosts: localhost
  vars:
   container_name: default
  vars_prompt:
  - name: "container_name"
    prompt: "Enter the Container Name: "
    private: no
  tasks:
#Step2: Configuring YUM to install Docker Software.
#-------------------------------------------------
  - name: Configuring YUM
    yum_repository:
     name: docker
     description: Configuring YUM for Docker
     baseurl: https://download.docker.com/linux/centos/7/x86_64/stable/
     gpgcheck: no
     enabled: true 
#Step3: Install Python because Ansible is based on Python.
#--------------------------------------------------------
  - name: Install Python3
    package: 
     name: python36
     state: present 
#Step4: Python provide pip which is used to install Docker-py to run docker commands
#--------------------------------------------------------------------------
  - name: Install Docker-py using pip 
    pip:
     name: docker-py
#Step5: Installing Docker on ReadHat8 Os 
#---------------------------------------
  - name: Install Docker on RedHat
    command: "yum install docker-ce --nobest -y"
    when: ansible_os_family == "RedHat"
#Step6: Starting Docker Services
#-------------------------------
  - name: Start Docker Service
    service:
     name: docker
     state: started
#Step9: Pull CentOS Image from dockerHub
#-------------------------------------- 
  - name: Pull Docker CentOS Image
    docker_image:
     name: centos
     source: pull
#Step9: Create docker image using dockerfile
#-------------------------------------------- 
  - name: creating image with ssh enable
    docker_image:
     name: docker_ssh
     path: docker
     state: build
#Step10: Creating Docker Container with ssh  enabled and exposing the container at port no 8080.
#------------------------------------------------------------------------
  - name: Creating Docker Container
    docker_container:
     name: "{{ container_name }}"
     image: docker_ssh:latest
     state: started
     detach: true
     interactive: true
     ports:
     - "{{ 9000 | random(start=2000) }}:22"
#Step11: Getting Information about Docker using  container name
#--------------------------------------------------------------
  - name: Get infos on container
    docker_container_info:
      name: "{{ container_name }}"
    register: result
  - name: Print information about container
    debug:
      var: result.container.NetworkSettings.IPAddress
    when: result.exists
  - name: Print docker port
    debug:
      var: result.container.NetworkSettings.Ports["22/tcp"][0].HostPort
  - name: 1Print docker port
    debug:
      var: result.container.NetworkSettings.Ports

                                                                                             


